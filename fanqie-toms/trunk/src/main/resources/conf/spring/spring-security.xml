<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <security:http pattern="/login" security="none"/>
    <security:http pattern="/error" security="none"/>
    <security:http pattern="/denied" security="none"/>
    <security:http pattern="/" security="none"/>
    <security:http use-expressions="false">
        <security:form-login login-page="/login" password-parameter="password"
                             username-parameter="username" login-processing-url="/login_process"
                             authentication-failure-url="/login?error=true"
                             default-target-url="/system/login_success"/>
        <security:custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR"/>
        <security:logout logout-url="/system/logout" logout-success-url="/login"/>
        <security:access-denied-handler error-page="/denied"/>
        <!--<security:session-management invalid-session-url="/login">-->
        <!--&lt;!&ndash;不限制同一个用户同时登录次数，属性max-sessions 设置为一个不会轻易超出的数值 &ndash;&gt;-->
        <!--<security:concurrency-control max-sessions="10" session-registry-alias="sessionRegistry" expired-url="/login?temp=true"/>-->
        <!--</security:session-management>-->


    </security:http>
    <security:authentication-manager alias="tomsAuthenticationManager">
        <security:authentication-provider user-service-ref="userInfoService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
    <!--配置过滤器-->
    <bean id="filterSecurityInterceptor"
          class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <!--资源与权限的对应关系-->
        <property name="securityMetadataSource" ref="mySecurityMetadataSource"/>
        <!--用户拥有的权限-->
        <property name="authenticationManager" ref="tomsAuthenticationManager"/>
        <!--用户是否拥有所请求的权限-->
        <property name="accessDecisionManager" ref="myAccessDecisionManager"/>
        <property name="rejectPublicInvocations" value="false"/>
    </bean>
    <bean id="myAccessDecisionManager" class="com.fanqielaile.toms.support.security.ResourceAccessDecisionManager">
        <constructor-arg type="org.springframework.security.access.AccessDecisionVoter" ref="roleVoter"/>
    </bean>
    <bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter"/>
    <bean id="mySecurityMetadataSource" class="com.fanqielaile.toms.support.security.SecurityMetadataSource">
        <property name="requestMapResolver" ref="requestMapResolver"/>
        <property name="roleDao" ref="roleDao"/>
    </bean>
    <bean id="requestMapResolver" class="com.fanqielaile.toms.support.security.DBRequestMapResolver">
        <property name="permissionDao" ref="permissionDao"/>
    </bean>
    <!--<bean id="messageManageService" class="com.tomasky.msp.client.service.impl.MessageManageServiceImpl"/>-->
    <bean id="rolePermissionChangeListener" class="com.fanqielaile.toms.support.listener.RolePermissionChangeListener">
        <property name="requestMapResolver" ref="requestMapResolver"/>
    </bean>
    <!--<bean id="businLogClient" class="com.tomato.framework.log.client.BusinLogClient"/>
    <bean id="sysLogClient" class="com.tomato.framework.log.client.SysLogClient"/>-->
</beans>