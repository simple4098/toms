<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fanqielaile.toms.dao.BangInnDao">
    <resultMap id="BaseResultMap" type="com.fanqielaile.toms.model.BangInn">
        <id column="id" property="id"/>
        <result column="company_id" property="companyId"/>
        <result column="bang_date" property="bangDate"/>
        <result column="lose_date" property="loseDate"/>
        <result column="start_date" property="startDate"/>
        <result column="inn_id" property="innId"/>
        <result column="inn_name" property="innName"/>
        <result column="code" property="code"/>
        <result column="inn_label_id" property="innLabelId"/>
        <result column="mobile" property="mobile"/>
        <result column="inn_code" property="innCode"/>
        <result column="user_id" property="userId"/>
        <result column="type" property="type"/>
        <result column="account_id" property="accountId"/>
        <result column="account_id_di" property="accountIdDi"/>
        <result column="ota_wg_id" property="otaWgId"/>
        <result column="sj" property="sj"/>
    </resultMap>
    <resultMap id="BangInnDtoResult" type="com.fanqielaile.toms.dto.BangInnDto">
        <id column="id" property="id"/>
        <result column="company_id" property="companyId"/>
        <result column="bang_date" property="bangDate"/>
        <result column="lose_date" property="loseDate"/>
        <result column="start_date" property="startDate"/>
        <result column="inn_id" property="innId"/>
        <result column="inn_name" property="innName"/>
        <result column="code" property="code"/>
        <result column="inn_label_id" property="innLabelId"/>
        <result column="mobile" property="mobile"/>
        <result column="inn_code" property="innCode"/>
        <result column="user_id" property="userId"/>
        <result column="type" property="type"/>
        <result column="company_name" property="companyName"/>
        <result column="company_code" property="companyCode"/>
        <result column="account_id" property="accountId"/>
        <result column="ota_wg_id" property="otaWgId"/>
        <result column="account_id_di" property="accountIdDi"/>

    </resultMap>
    <resultMap id="orderConfigId" type="com.fanqielaile.toms.dto.OrderConfigDto">
        <result column="inn_id" property="innId"/>
        <result column="inn_name" property="innName"/>
        <result column="label_name" property="labelName"/>
        <result column="company_id" property="companyId"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,company_id,bang_date,lose_date,start_date,inn_id,inn_name,code,inn_label_id,mobile,inn_code,user_id,type,account_id,ota_wg_id,sj
       </sql>
    <insert id="insertBangInn" parameterType="com.fanqielaile.toms.model.BangInn">
              insert into bang_inn(id,company_id,bang_date,lose_date,start_date,inn_id,inn_name,code,inn_label_id,mobile,inn_code,user_id,type,deleted)
              values (#{id},#{companyId},#{bangDate},#{loseDate},#{startDate},#{innId},#{innName},#{code},#{innLabelId},#{mobile},#{innCode},#{userId},#{type},0)
       </insert>
    <select id="selectBangInnByInnLabelId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where inn_label_id = #{innLabelId} and deleted=0
        <if test="userInfo.dataPermission == 0">
            and user_id = #{userInfo.id}
        </if>
    </select>
    <update id="updateBangInnUserId">
              update bang_inn set user_id = #{newUserId} where user_id = #{oldUserId}
       </update>
    <select id="selectBangInnByUser" parameterType="com.fanqielaile.toms.model.UserInfo" resultMap="BaseResultMap">
        SELECT DISTINCT inn_label_id FROM bang_inn where company_id = #{companyId} and deleted=0
        <if test="dataPermission == 0">
            and user_id = #{id}
        </if>
        and inn_label_id is not NULL
    </select>
    <select id="selectBangInnByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where user_id = #{userId} and deleted=0 ORDER BY bang_date DESC
    </select>
    <select id="selectBangInnListByUserInfo" parameterType="com.fanqielaile.toms.model.UserInfo"
            resultMap="BangInnDtoResult">
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where company_id = #{companyId} and deleted=0
        <if test="dataPermission == 0">
            and user_id = #{id}
        </if>
        <if test="innLabelId != null and innLabelId != ''">
            and inn_label_id = #{innLabelId}
        </if>
        <if test="userId != null and userId != ''">
            and user_id = #{userId}
        </if>
        <if test="keywords != null and keywords != ''">
            and inn_name like concat('%',#{keywords},'%')
        </if>
        ORDER BY bang_date DESC,id ASC
    </select>

    <select id="selectBangInnList" parameterType="com.fanqielaile.toms.model.UserInfo" resultMap="orderConfigId">
        SELECT b.inn_id,b.inn_name,il.label_name,b.company_id
        from bang_inn b LEFT  JOIN  inn_label il ON  il.id =b.inn_label_id
        where b.company_id = #{companyId} and b.deleted=0
        <if test="dataPermission == 0">
            and b.user_id = #{id}
        </if>
        <if test="innLabelId != null and innLabelId != ''">
            and b.inn_label_id = #{innLabelId}
        </if>
        ORDER BY b.bang_date DESC,b.id ASC
    </select>

    <select id="selectBangInnById" parameterType="java.lang.String" resultMap="BangInnDtoResult">
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where id= #{id} and deleted=0
    </select>
    <update id="updateBangInn" parameterType="com.fanqielaile.toms.dto.BangInnDto">
        update bang_inn
        <trim prefix="SET" suffixOverrides=",">
            <if test="innLabelId != null and innLabelId != ''">
                inn_label_id = #{innLabelId},
            </if>
            <if test="code != null and code != ''">
                code= #{code},
            </if>
            <if test="userId != null and userId != ''">
                user_id = #{userId},
            </if>
        </trim>
        where id= #{id}
    </update>

    <update id="updateBangInnTp" parameterType="com.fanqielaile.toms.model.BangInn">
        update bang_inn
        <trim prefix="SET" suffixOverrides=",">
             updated_date = now(),sj=#{sj},
            <if test="mobile != null and mobile != ''">
                mobile= #{mobile},
            </if>
            <if test="innName != null and innName != ''">
                inn_name= #{innName},
            </if>
            <if test="otaWgId != null and otaWgId != ''">
                ota_wg_id = #{otaWgId},
            </if>
            <if test="accountIdDi != null and accountIdDi != ''">
                account_id_di = #{accountIdDi},
            </if>
            <if test="accountId != null and accountId != ''">
                account_id = #{accountId},
            </if>
        </trim>
        where id= #{id}
    </update>
    <select id="selectCompanyByInnId" parameterType="java.lang.Integer" resultMap="BangInnDtoResult">
        select bi.inn_id,bi.inn_code,bi.company_id,bi.bang_date,c.company_name,c.company_code from bang_inn bi INNER
        JOIN
        company c on bi.company_id = c.id and c.type = 1 where bi.inn_id = #{innId} and bi.deleted=0 ORDER BY bi.bang_date DESC
    </select>
    <insert id="createBangInn" parameterType="com.fanqielaile.toms.dto.BangInnDto">
        insert into bang_inn(id,company_id,bang_date,lose_date,start_date,inn_id,inn_name,code,inn_label_id,mobile,inn_code,user_id,type,account_id,ota_wg_id,account_id_di, deleted,sj)
        VALUES (#{uuid},#{companyId},#{bangDate},#{loseDate},#{startDate},#{innId},#{innName},#{code},#{innLabelId},#{mobile},#{innCode},#{userId},#{type},#{accountId},#{otaWgId},#{accountIdDi},0,#{sj})
    </insert>
    <select id="selectBangInnByCompanyIdAndInnId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bang_inn where company_id=#{companyId} and inn_id = #{innId} and deleted=0 ORDER BY bang_date DESC limit 1
    </select>
    <select id="selectBangInnByStringInnId" resultMap="BangInnDtoResult"
            parameterType="com.fanqielaile.toms.model.BangInn">
        SELECT
        <include refid="Base_Column_List"/>
        FROM bang_inn
        <where>
            <foreach collection="bangInnList" index="index" item="item" open="(" close=")" separator=",">
                id in #{item.id}
            </foreach>
        </where>
    </select>
    <select id="selectBangInnByCompanyId" resultMap="BangInnDtoResult" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where company_id =#{companyId} and deleted=0
    </select>
    <select id="selectBangInnByUserAndCode" resultMap="BangInnDtoResult">
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where company_id = #{userInfo.companyId} and code=#{code} limit 1
    </select>
    <select id="selectBangInnByInnId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where inn_id=#{innId} and deleted=0
    </select>
    <select id="selectBangInnByTBHotelId" parameterType="java.lang.String" resultMap="BangInnDtoResult">
        SELECT bi.* from bang_inn bi INNER JOIN ota_inn_ota oo on bi.ota_wg_id = oo.id where oo.wg_hid=#{otaHotelId} and
        oo.deleted = 0 and bi.deleted=0
    </select>

    <select id="selectBangInnByCompanyIdAndAccountId" resultMap="BangInnDtoResult" >
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where company_id ='${companyId}' and account_id=#{accountId} and deleted=0 and sj=1
    </select>

    <update id="deleteBangInnByCompanyIdAndInnId">
        UPDATE bang_inn SET deleted=1 where company_id='${companyId}' and inn_id =#{innId}
    </update>

    <update id="deleteBangInnByCompanyId" parameterType="java.lang.String" >
        UPDATE bang_inn SET deleted=1 where company_id='${companyId}'
    </update>
</mapper>