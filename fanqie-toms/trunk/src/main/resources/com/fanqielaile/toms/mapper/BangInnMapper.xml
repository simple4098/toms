<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fanqielaile.toms.dao.BangInnDao">
    <resultMap id="BaseResultMap" type="com.fanqielaile.toms.model.BangInn">
        <id column="id" property="id"/>
        <result column="company_id" property="companyId"/>
        <result column="bang_date" property="bangDate"/>
        <result column="lose_date" property="loseDate"/>
        <result column="start_date" property="startDate"/>
        <result column="inn_id" property="innId"/>
        <result column="inn_name" property="innName"/>
        <result column="code" property="code"/>
        <result column="inn_label_id" property="innLabelId"/>
        <result column="mobile" property="mobile"/>
        <result column="inn_code" property="innCode"/>
        <result column="user_id" property="userId"/>
        <result column="type" property="type"/>
        <result column="account_id" property="accountId"/>
        <result column="account_id_di" property="accountIdDi"/>
        <result column="ota_wg_id" property="otaWgId"/>
        <result column="sj" property="sj"/>
    </resultMap>
    <resultMap id="BangInnDtoResult" type="com.fanqielaile.toms.dto.BangInnDto">
        <id column="id" property="id"/>
        <result column="company_id" property="companyId"/>
        <result column="bang_date" property="bangDate"/>
        <result column="lose_date" property="loseDate"/>
        <result column="start_date" property="startDate"/>
        <result column="inn_id" property="innId"/>
        <result column="inn_name" property="innName"/>
        <result column="code" property="code"/>
        <result column="inn_label_id" property="innLabelId"/>
        <result column="mobile" property="mobile"/>
        <result column="inn_code" property="innCode"/>
        <result column="user_id" property="userId"/>
        <result column="type" property="type"/>
        <result column="company_name" property="companyName"/>
        <result column="company_code" property="companyCode"/>
        <result column="account_id" property="accountId"/>
        <result column="ota_wg_id" property="otaWgId"/>
        <result column="account_id_di" property="accountIdDi"/>

    </resultMap>
    <resultMap id="orderConfigId" type="com.fanqielaile.toms.dto.OrderConfigDto">
        <result column="inn_id" property="innId"/>
        <result column="inn_name" property="innName"/>
        <result column="label_name" property="labelName"/>
        <result column="company_id" property="companyId"/>
    </resultMap>

    <resultMap id="fcId" type="com.fanqielaile.toms.dto.BangInnDto" extends="BaseResultMap">
       <result column="ota_inn_ota_id" property="otaInnOtaId"/>
       <result column="ota_info_id" property="otaInfoId"/>
    </resultMap>
    <resultMap id="fcId_otaInn" type="com.fanqielaile.toms.dto.BangInnDto" extends="fcId">
       <result column="sjia_model" property="sJiaModel"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,company_id,bang_date,lose_date,start_date,inn_id,inn_name,code,inn_label_id,mobile,inn_code,user_id,type,account_id,account_id_di,ota_wg_id,sj
       </sql>
    <insert id="insertBangInn" parameterType="com.fanqielaile.toms.model.BangInn">
              insert into bang_inn(id,company_id,bang_date,lose_date,start_date,inn_id,inn_name,code,inn_label_id,mobile,inn_code,user_id,type,deleted)
              values (#{id},#{companyId},#{bangDate},#{loseDate},#{startDate},#{innId},#{innName},#{code},#{innLabelId},#{mobile},#{innCode},#{userId},#{type},0)
       </insert>



    <select id="selectBangInnByInnLabelId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where deleted=0
        <if test="innLabelId != null and innLabelId != ''">
            and inn_label_id = #{innLabelId}
        </if>
        <if test="userInfo.dataPermission == 0">
            and user_id = #{userInfo.id}
        </if>
        <if test="userInfo.companyId != null and userInfo.companyId != ''">
            and company_id = #{userInfo.companyId}
        </if>
    </select>
    <update id="updateBangInnUserId">
              update bang_inn set user_id = #{newUserId} where user_id = #{oldUserId}
       </update>
    <select id="selectBangInnByUser" parameterType="com.fanqielaile.toms.model.UserInfo" resultMap="BaseResultMap">
        SELECT DISTINCT inn_label_id FROM bang_inn where company_id = #{companyId} and deleted=0
        <if test="dataPermission == 0">
            and user_id = #{id}
        </if>
        and inn_label_id is not NULL
    </select>
    <select id="selectBangInnByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where user_id = #{userId} and deleted=0 ORDER BY bang_date DESC
    </select>
    <select id="selectBangInnListByUserInfo" parameterType="com.fanqielaile.toms.model.UserInfo"
            resultMap="BangInnDtoResult">
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where company_id = #{companyId} and deleted=0
        <if test="dataPermission == 0">
            and user_id = #{id}
        </if>
        <if test="innLabelId != null and innLabelId != ''">
            and inn_label_id = #{innLabelId}
        </if>
        <if test="userId != null and userId != ''">
            and user_id = #{userId}
        </if>
        <if test="keywords != null and keywords != ''">
            and inn_name like concat('%',#{keywords},'%')
        </if>
        ORDER BY bang_date DESC,id ASC
    </select>

    <select id="selectBangInnList" parameterType="com.fanqielaile.toms.model.UserInfo" resultMap="orderConfigId">
        SELECT b.inn_id,b.inn_name,il.label_name,b.company_id
        from bang_inn b LEFT  JOIN  inn_label il ON  il.id =b.inn_label_id
        where b.company_id = #{companyId} and b.deleted=0
        <if test="dataPermission == 0">
            and b.user_id = #{id}
        </if>
        <if test="innLabelId != null and innLabelId != ''">
            and b.inn_label_id = #{innLabelId}
        </if>
        <if test="keywords != null and keywords != ''">
            and inn_name like concat('%',#{keywords},'%')
        </if>
        ORDER BY b.bang_date DESC,b.id ASC
    </select>

    <select id="selectBangInnById" parameterType="java.lang.String" resultMap="BangInnDtoResult">
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where id= #{id} and deleted=0
    </select>

    <select id="selectBangInnByInnIdCompanyId"  resultMap="BangInnDtoResult">
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where inn_id= #{innId} and company_id = '${companyId}'and deleted=0
    </select>
    <update id="updateBangInn" parameterType="com.fanqielaile.toms.dto.BangInnDto">
        update bang_inn
        <trim prefix="SET" suffixOverrides=",">
            <if test="innLabelId != null and innLabelId != ''">
                inn_label_id = #{innLabelId},
            </if>
            <if test="code != null and code != ''">
                code= #{code},
            </if>
            <if test="userId != null and userId != ''">
                user_id = #{userId},
            </if>
        </trim>
        where id= #{id}
    </update>

    <update id="updateBangInnTp" parameterType="com.fanqielaile.toms.model.BangInn">
        update bang_inn
        <trim prefix="SET" suffixOverrides=",">
             updated_date = now(),sj=#{sj}, account_id_di = #{accountIdDi},
            <if test="mobile != null and mobile != ''">
                mobile= #{mobile},
            </if>
            <if test="innName != null and innName != ''">
                inn_name= #{innName},
            </if>
            <if test="otaWgId != null and otaWgId != ''">
                ota_wg_id = #{otaWgId},
            </if>
            <if test="accountId != null and accountId != ''">
                account_id = #{accountId},
            </if>
        </trim>
        where id= #{id}
    </update>
    <select id="selectCompanyByInnId" parameterType="java.lang.Integer" resultMap="BangInnDtoResult">
        select bi.inn_id,bi.inn_code,bi.company_id,bi.bang_date,c.company_name,c.company_code from bang_inn bi INNER
        JOIN
        company c on bi.company_id = c.id and c.type = 1 where bi.inn_id = #{innId} and bi.deleted=0 ORDER BY bi.bang_date DESC
    </select>
    <insert id="createBangInn" parameterType="com.fanqielaile.toms.dto.BangInnDto">
        insert into bang_inn(id,company_id,bang_date,lose_date,start_date,inn_id,inn_name,code,inn_label_id,mobile,inn_code,user_id,type,account_id,ota_wg_id,account_id_di, deleted,sj)
        VALUES (#{uuid},#{companyId},#{bangDate},#{loseDate},#{startDate},#{innId},#{innName},#{code},#{innLabelId},#{mobile},#{innCode},#{userId},#{type},#{accountId},#{otaWgId},#{accountIdDi},0,#{sj})
    </insert>
    <select id="selectBangInnByCompanyIdAndInnId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bang_inn where company_id=#{companyId} and inn_id = #{innId} and deleted=0 ORDER BY bang_date DESC limit 1
    </select>
    <select id="selectBangInnByStringInnId" resultMap="BangInnDtoResult"
            parameterType="com.fanqielaile.toms.model.BangInn">
        SELECT
        <include refid="Base_Column_List"/>
        FROM bang_inn
        <where>
            <foreach collection="bangInnList" index="index" item="item" open="(" close=")" separator=",">
                id in #{item.id}
            </foreach>
        </where>
    </select>
    <select id="selectBangInnByCompanyId" resultMap="BangInnDtoResult" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where company_id =#{companyId} and deleted=0
    </select>
    <select id="selectBangInnByUserAndCode" resultMap="BangInnDtoResult">
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where company_id = #{userInfo.companyId} and code=#{code} limit 1
    </select>
    <select id="selectBangInnByInnId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where inn_id=#{innId} and deleted=0
    </select>
    <select id="selectBangInnByTBHotelId"  resultMap="BangInnDtoResult">
        SELECT bi.* from bang_inn bi INNER JOIN ota_inn_ota oo on bi.id = oo.bang_inn_id where oo.wg_hid=#{otaHotelId} and
        oo.deleted = 0 and bi.deleted=0 and oo.company_id = '${companyId}' and oo.ota_info_id ='${otaInfoId}'
    </select>

    <select id="selectBangInnByCompanyIdAndAccountId" resultMap="BangInnDtoResult" >
        SELECT
        <include refid="Base_Column_List"/>
        from bang_inn where company_id ='${companyId}' and account_id=#{accountId} and deleted=0
    </select>

    <select id="selectBangInnByParam" resultMap="BangInnDtoResult" >
        SELECT o.* from bang_inn o  INNER JOIN ota_inn_ota oio ON oio.bang_inn_id = o.id
        where  o.deleted=0 and oio.sj=1 and oio.ota_info_id='${otaInfoId}' and o.company_id ='${companyId}' and o.account_id=#{accountId}
    </select>

    <update id="deleteBangInnByCompanyIdAndInnId">
        UPDATE bang_inn SET deleted=1 where company_id='${companyId}' and inn_id =#{innId}
    </update>

    <update id="deleteBangInnByCompanyId" parameterType="java.lang.String" >
        UPDATE bang_inn SET deleted=1 where company_id='${companyId}'
    </update>


    <select id="selectFcBangInn" parameterType="com.fanqielaile.toms.dto.BangInnDto" resultMap="fcId" >
        SELECT b.*,oio.id as ota_inn_ota_id,oio.ota_info_id from bang_inn b
        LEFT JOIN ota_inn_ota oio ON oio.bang_inn_id = b.id and oio.sj=1 and oio.ota_info_id='${otaInfoId}'
        where  b.deleted=0  and b.company_id ='${companyId}'
        <if test="innStatus!=null and innStatus.name()=='NOT_MATCH'">
            and oio.id is NULL
        </if>
        <if test="innStatus!=null and innStatus.name()=='MATCH'">
            and oio.id NOTNULL
        </if>
        <if test="dataPermission == 0">
            and b.user_id = #{userId}
        </if>
        <if test="innLabelId !=null and innLabelId!= ''">
            and b.inn_label_id = #{innLabelId}
        </if>
        <if test="keywords != null and keywords != ''">
            and inn_name like concat('%',#{keywords},'%')
        </if>
        ORDER BY b.bang_date DESC,b.id ASC
    </select>

    <select id="selectOTABangInn" parameterType="com.fanqielaile.toms.dto.BangInnDto" resultMap="fcId" >

        SELECT b.*,oio.id as ota_inn_ota_id,oio.ota_info_id from bang_inn b
        LEFT JOIN ota_inn_ota oio ON oio.bang_inn_id = b.id and oio.ota_info_id='${otaInfoId}'
        where  b.deleted=0  and b.company_id='${companyId}'
        <if test="companyIdList!=null and companyIdList.size()>0">
            and b.inn_id NOT IN ( SELECT inn_id from bang_inn where  company_id in
            <foreach collection="companyIdList" index="index" item="item" open="(" close=")" separator="," >
               '${item}'
            </foreach>
            )
        </if>
        <if test="innStatus!=null and innStatus.name()=='NOT_MATCH'">
            and oio.id is NULL
        </if>
        <if test="innStatus!=null and innStatus.name()=='MATCH'">
            and oio.id NOTNULL
        </if>
        <if test="dataPermission == 0">
            and b.user_id = #{userId}
        </if>
        <if test="innLabelId !=null and innLabelId!= ''">
            and b.inn_label_id = #{innLabelId}
        </if>
        <if test="keywords != null and keywords != ''">
            and inn_name like concat('%',#{keywords},'%')
        </if>
        ORDER BY b.bang_date DESC,b.id ASC

    </select>


    <select id="selectBangInnByCompanyListInnId"  parameterType="com.fanqielaile.toms.dto.BangInnDto" resultMap="fcId">
        SELECT b.* from bang_inn b where  b.deleted=0  AND b.inn_id=#{innId}
        <if test="companyIdList!=null and companyIdList.size()>0">
            and b.company_id in
            <foreach collection="companyIdList" index="index" item="item" open="(" close=")" separator="," >
                '${item}'
            </foreach>
        </if>

    </select>

    <select id="selectFcExcelBangInn" parameterType="com.fanqielaile.toms.dto.BangInnDto" resultMap="fcId" >
        SELECT b.*,oio.id as ota_inn_ota_id,oio.ota_info_id from bang_inn b
        LEFT JOIN ota_inn_ota oio ON oio.bang_inn_id = b.id and oio.sj=1 and oio.ota_info_id='${otaInfoId}'
        where  b.deleted=0  and b.company_id ='${companyId}'
        <if test="innStatus!=null and innStatus.name()=='NOT_MATCH'">
            and oio.id is NULL
        </if>
        <if test="innStatus!=null and innStatus.name()=='MATCH'">
            and oio.id NOTNULL
        </if>

        <if test="innLabelId !=null and innLabelId!= ''">
            and b.inn_label_id = #{innLabelId}
        </if>
        <if test="keywords != null and keywords != ''">
            and inn_name like concat('%',#{keywords},'%')
        </if>
        ORDER BY b.bang_date DESC,b.id ASC
    </select>
    <select id="selectBangInnByCompanyIdSj"  resultMap="fcId_otaInn" >
        SELECT b.*,oio.id as ota_inn_ota_id,oio.ota_info_id,oio.sjia_model from bang_inn b
        LEFT JOIN ota_inn_ota oio ON oio.bang_inn_id = b.id
        where b.sj=1 and oio.sj=1 and oio.ota_info_id='${otaInfoId}'  and b.company_id ='${companyId}'
        ORDER BY b.bang_date DESC,b.id ASC
    </select>

    <update id="updateSjBangInn">
        UPDATE bang_inn SET  <if test="!sj">sj=0</if><if test="sj">sj=1</if>
        where inn_id=#{innId} and company_id='${companyId}'
    </update>

    <select id="selectNoMatch" resultMap="BangInnDtoResult">
        SELECT inn_id,inn_name from bang_inn where company_id='d0392bc8-131c-8989-846e-c81c66011111'
        and account_id in (
32680
,28412
,35092
,23354
,26971
,40377
,23144
,29959
,30395
,39819
,32920
,26926
,25553
,23643
,27526
,39605
,33085
,35810
,38518
,26857
,25810
,39685
,26447
,34268
,32400
,28596
,22058
,31307
,23373
,26319
,28933
,27104
,25432
,23981
,37669
,26912
,29056
,36025
,27822
,30619
,34241
,38693
,38979
,41443
,24407
,39278
,24869
,25899
,28408
,22505
,25875
,38466
,32846
,23299
,31679
,32787
,36793
,37863
,34344
,34451
,23857
,23324
,28531
,28321
,23761
,28449
,29225
,28671
,26946
,29101
,29018
,27946
,28851
,31372
,37373
,27378
,31100
,33651
,32551
,36893
,23565
,31144
,32452
,33889
,31903
,34436
,42192
,40532
,41630
,32103
,24436
,27013
,40268
,28895
,34394
,26228
,32223
,32338
,36330
,37227
,38943
,39843
,29626
,32571
,32666
,35598
,35461
,39601
,41379
,39015
,37422
,27659
,25566
,26729
,26384
,26655
,29040
,26630
,28418
,27368
,31987
,35463
,29740
,30244
,28723
,32114
,32328
,32209
,34145
,37846
,28586
,28706
,32392
,32850
,27825
,25557
,32301
,35383
,33018
,33856
,37272
,41272
,36845
,23341
,26865
,30348
,25764
,36345
,38819
,39234
,26254
,38850
,40094
,25549
,29813
,36993
,38784
,41993
,25324
,27463
,28373
,28544
,39902
,41037
,28572
,28776
,34246
,36920
,28311
,28704
,29077
,26761
,30981
,36007
,26727
,32374
,31158
,29310
,29842
,33391
,26422
,27976
,30403
,31935
,34004
,37564
,39427
,38013
,38179
,41256
,41681
,27608
,29766
,30131
,27883
,31055
,38895
,28563
,40892
,25590
,29234
,25244
,31072
,32827
,33277
,37380
,38969
,42072
,26896
,28223
,24433
,28097
,28109
,30232
,25993
,28410
,28558
,29508
,27773
,39833
,42581
,29853
,29754
,27868
,29855
,32702
,33442
,27474
,31582
,32332
,36885
,38300
,26680
,27481
,28168
,27766
,32388
,41859
,31053
)
    </select>
</mapper>