<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fanqielaile.toms.dao.CompanyDao">
    <resultMap id="BaseResultMap" type="com.fanqielaile.toms.model.Company">
        <id column="id" property="id"/>
        <result column="creator_id" property="creatorId"/>
        <result column="created_date" property="createdDate"/>
        <result column="updated_date" property="updatedDate"/>
        <result column="modifier_id" property="modifierId"/>
        <result column="version" property="version"/>
        <result column="deleted" property="deleted"/>
        <result column="company_name" property="companyName"/>
        <result column="ota_id" property="otaId"/>
        <result column="user_account" property="userAccount"/>
        <result column="user_password" property="userPassword"/>
        <result column="company_code" property="companyCode"/>
        <result column="type" property="type"/>
        <result column="ota_id" property="otaId"/>
        <result column="user_account" property="userAccount"/>
        <result column="user_password" property="userPassword"/>
        <result column="company_type" property="companyType"/>
        <result column="pms_channel_name" property="pmsChannelName"/>
        <collection property="myselfChannelList" column="id" ofType="com.fanqielaile.toms.model.MyselfChannel" select="getMyselfChannelList"/>
    </resultMap>
    <select id="getMyselfChannelList" resultType="com.fanqielaile.toms.model.MyselfChannel" parameterType="java.lang.String">
        SELECT id as id,channel_name as channelName,channel_code as channelCode FROM toms_myself_channel where deleted = 0 and company_id = #{id}
    </select>
    <sql id="Base_Column_List">
        id, creator_id, created_date, updated_date,modifier_id,version,deleted,company_name,company_code,type,ota_id,user_account,user_password,company_type
    </sql>
    <insert id="insertCompany" parameterType="com.fanqielaile.toms.model.Company">
        insert into
        company(id,creator_id,created_date,updated_date,modifier_id,version,deleted,company_name,company_code,type,ota_id,user_account,user_password,company_type)
        values
        (#{id},#{creatorId},#{createdDate},#{updatedDate},#{modifierId},#{version},#{deleted},#{companyName},#{companyCode},#{type},#{otaId},#{userAccount},#{userPassword},#{companyType})
       </insert>
    <select id="selectCompanyById" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        c.id, c.creator_id, c.created_date, c.updated_date,c.modifier_id,c.version,c.deleted,c.company_name,c.company_code,c.type,c.ota_id,c.user_account,c.user_password,c.company_type,tpcn.pms_channel_name
        FROM company c LEFT  JOIN toms_pms_channel_name tpcn on c.id = tpcn.company_id and tpcn.deleted = 0   where c.deleted = 0
        and c.id = #{id}
    </select>
    <insert id="insertCompanyPermission" parameterType="com.fanqielaile.toms.model.Company">
        INSERT INTO company_permission (id,company_id,permission_id,created_date,updated_date)
        VALUES
        <foreach collection="permissionList" item="p" separator=",">
            (#{p.uuid},#{id},#{p.id},#{p.createdDate},#{p.updatedDate})
        </foreach>
    </insert>
    <select id="selectCompanyByCompany" parameterType="com.fanqielaile.toms.model.Company" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM company where deleted =0
        <if test="companyName != null and companyName != ''">
            and company_name like concat('%',#{companyName},'%')
        </if>
        <if test="companyCode != null and companyCode != ''">
            and company_code = #{companyCode}
        </if>
    </select>
    <select id="selectCompanyByCompanyCode" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        from company where company_code = #{companyCode} and type = 1 and deleted = 0 limit 1
    </select>
    <update id="updateCompany" parameterType="com.fanqielaile.toms.model.Company">
        update company
        <trim prefix="SET" suffixOverrides=",">
            updated_date=now(),
            version=version+1,
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
            </if>
            <if test="companyCode != null and companyCode != ''">
                company_code = #{companyCode},
            </if>
            <if test="otaId != null and otaId != ''">
                ota_id = #{otaId},
            </if>
            <if test="userAccount != null and userAccount != ''">
                user_account = #{userAccount},
            </if>
            <if test="userPassword != null and userPassword != ''">
                user_password = #{userPassword},
            </if>
            <if test="companyType != null and companyType != ''">
                company_type = #{companyType.name},
            </if>

        </trim>
        where deleted = 0 and id = #{id}
    </update>
    <update id="deleteCompanyById" parameterType="java.lang.String">
        update company SET  deleted = 1 where  id = '${companyId}'
    </update>
    <delete id="deleteCompanyPermissionByCompanyId" parameterType="java.lang.String">
        DELETE FROM company_permission where company_id = #{companyId}
    </delete>

    <select id="selectByUser" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        from company where user_account = #{userAccount} and user_password=#{userPassword} and type = 1 and deleted = 0 limit 1
    </select>
</mapper>